default_platform(:ios)

lane :release_to_testflight do
  app_store_connect_api_key(
    key_id: ENV['AUTHENTICATION_KEY_ID'],
    issuer_id: ENV['AUTHENTICATION_KEY_ISSUER_ID'],
    key_content: ENV['AUTHENTICATION_KEY_CONTENT'],
    in_house: false
  )
  build_app(
    scheme: "CloudSignedExample",
    configuration: "Release",
    export_method: "app-store",
    export_team_id: ENV['TEAM_ID'],
    include_bitcode: true,
    include_symbols: true,
    export_options: {
      "signingStyle" => "automatic",
      "manageAppVersionAndBuildNumber" => false
    },
    xcargs: "-allowProvisioningUpdates"
  )
  upload_to_testflight(
    skip_submission: true,
    skip_waiting_for_build_processing: true
  )
end

lane :release_to_ipa do
  app_store_connect_api_key(
    key_id: ENV['AUTHENTICATION_KEY_ID'],
    issuer_id: ENV['AUTHENTICATION_KEY_ISSUER_ID'],
    key_content: ENV['AUTHENTICATION_KEY_CONTENT'],
    in_house: false
  )
  build_app(
    scheme: "CloudSignedExample",
    configuration: "Release",
    export_method: "app-store",
    export_team_id: ENV['TEAM_ID'],
    include_bitcode: true,
    include_symbols: true,
    export_options: {
      "signingStyle" => "automatic",
      "manageAppVersionAndBuildNumber" => false
    },
    xcargs: "-allowProvisioningUpdates",
    output_name: "CloudSignedExample.ipa"
  )
end

lane :github_release do

  version = sh("cd ..; agvtool what-version -terse").gsub("\n",'')

  set_github_release(
    repository_name: ENV["REPO"],
    api_bearer: ENV["GITHUB_TOKEN"],
    name: "v#{version}",
    tag_name: "v#{version}",
    commitish: "main",
    upload_assets: ["CloudSignedExample.ipa", "CloudSignedExample.app.dSYM.zip"]
  )
end
